{"version":3,"file":"mergeStyles.js","sourceRoot":"../src/","sources":["mergeStyles.ts"],"names":[],"mappings":";;;;IAcA;;;;OAIG;IACH,SAAgB,WAAW;QAAC,cAAgE;aAAhE,UAAgE,EAAhE,qBAAgE,EAAhE,IAAgE;YAAhE,yBAAgE;;QAC1F,OAAO,QAAQ,CAAC,IAAI,EAAE,IAAA,mCAAe,GAAE,CAAC,CAAC;IAC3C,CAAC;IAFD,kCAEC;IAED;;;;;OAKG;IACH,SAAgB,QAAQ,CACtB,IAE0E,EAC1E,OAAuB;QAEvB,IAAM,SAAS,GAAG,IAAI,YAAY,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACxD,IAAM,IAAI,GAAG,OAAO,IAAI,EAAE,CAAC;QAC3B,IAAM,eAAe,GAAG,IAAA,6BAAc,EAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,eAAe,EAAE;YACnB,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,CAAC,CAAiB,CAAC;SAClD;QACD,IAAI,CAAC,UAAU,GAAG,uBAAU,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACtD,IAAA,KAAuB,IAAA,qCAAiB,EAAC,IAAI,CAAC,UAAU,EAAE,SAAS,CAAC,EAAlE,OAAO,aAAA,EAAE,OAAO,aAAkD,CAAC;QAE3E,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,OAAO,CAAC,IAAI,CAAC,IAAA,mCAAgB,EAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;SAC/C;QAED,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;IApBD,4BAoBC","sourcesContent":["import { extractStyleParts } from './extractStyleParts';\nimport { IStyle, IStyleBaseArray } from './IStyle';\nimport { IStyleOptions } from './IStyleOptions';\nimport { isShadowConfig, ShadowConfig } from './shadowConfig';\nimport { getStyleOptions } from './StyleOptionsState';\nimport { Stylesheet } from './Stylesheet';\nimport { styleToClassName } from './styleToClassName';\n\nexport function mergeStyles(...args: (IStyle | IStyleBaseArray | false | null | undefined)[]): string;\nexport function mergeStyles(\n  shadowConfig: ShadowConfig,\n  ...args: (IStyle | IStyleBaseArray | false | null | undefined)[]\n): string;\n\n/**\n * Concatenation helper, which can merge class names together. Skips over falsey values.\n *\n * @public\n */\nexport function mergeStyles(...args: (IStyle | IStyleBaseArray | false | null | undefined)[]): string {\n  return mergeCss(args, getStyleOptions());\n}\n\n/**\n * Concatenation helper, which can merge class names together. Skips over falsey values.\n * Accepts a set of options that will be used when calculating styles.\n *\n * @public\n */\nexport function mergeCss(\n  args:\n    | (IStyle | IStyleBaseArray | false | null | undefined | ShadowConfig)\n    | (IStyle | IStyleBaseArray | false | null | undefined | ShadowConfig)[],\n  options?: IStyleOptions,\n): string {\n  const styleArgs = args instanceof Array ? args : [args];\n  const opts = options || {};\n  const hasShadowConfig = isShadowConfig(styleArgs[0]);\n  if (hasShadowConfig) {\n    opts.shadowConfig = styleArgs[0] as ShadowConfig;\n  }\n  opts.stylesheet = Stylesheet.getInstance(opts.shadowConfig);\n  const { classes, objects } = extractStyleParts(opts.stylesheet, styleArgs);\n\n  if (objects.length) {\n    classes.push(styleToClassName(opts, objects));\n  }\n\n  return classes.join(' ');\n}\n"]}